name: Uptime Monitor

on:
  schedule:
    - cron: '*/5 * * * *'  # Every 5 minutes
  workflow_dispatch:

jobs:
  uptime-check:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Check API Health
        id: api_health
        run: |
          echo "Checking API health endpoints..."
          
          # Check /healthz (working endpoint)
          if curl -f --max-time 10 https://app-ezgnqzzi.fly.dev/healthz; then
            echo "✅ API /healthz: OK"
            echo "api_healthz=ok" >> $GITHUB_OUTPUT
          else
            echo "❌ API /healthz: FAILED"
            echo "api_healthz=failed" >> $GITHUB_OUTPUT
          fi
          
          # Check /docs (working endpoint)
          if curl -f --max-time 10 https://app-ezgnqzzi.fly.dev/docs; then
            echo "✅ API /docs: OK"
            echo "api_docs=ok" >> $GITHUB_OUTPUT
          else
            echo "❌ API /docs: FAILED"
            echo "api_docs=failed" >> $GITHUB_OUTPUT
          fi
      
      - name: Check Web Health
        id: web_health
        run: |
          echo "Checking web endpoints..."
          
          # Check marketing site (working endpoint)
          if curl -f --max-time 10 https://vat-evo-marketing-gmijoswiy-gabriellagziels-projects.vercel.app; then
            echo "✅ Marketing Site: OK"
            echo "marketing=ok" >> $GITHUB_OUTPUT
          else
            echo "❌ Marketing Site: FAILED"
            echo "marketing=failed" >> $GITHUB_OUTPUT
          fi
          
          # Check custom domains (will fail until DNS is configured)
          if curl -f --max-time 10 https://vatevo.com/vida; then
            echo "✅ Custom Domain /vida: OK"
            echo "custom_vida=ok" >> $GITHUB_OUTPUT
          else
            echo "⚠️ Custom Domain /vida: FAILED (DNS not configured)"
            echo "custom_vida=failed" >> $GITHUB_OUTPUT
          fi
      
      - name: Create Issue on Failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const title = `🚨 Uptime Alert - ${new Date().toISOString()}`;
            const body = `
            ## Uptime Check Failed
            
            **Timestamp**: ${new Date().toISOString()}
            **Workflow**: ${{ github.workflow }}
            **Run ID**: ${{ github.run_id }}
            
            ### Failed Endpoints:
            - API /health/ready: ${{ steps.api_health.outputs.api_ready }}
            - API /health/db: ${{ steps.api_health.outputs.api_db }}
            - Marketing /vida: ${{ steps.web_health.outputs.marketing_vida }}
            - Dashboard: ${{ steps.web_health.outputs.dashboard }}
            
            ### Next Steps:
            1. Check service logs
            2. Verify DNS resolution
            3. Check SSL certificates
            4. Verify database connectivity
            
            ### Monitoring:
            - [GitHub Actions](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            - [API Health](https://api.vatevo.com/health/ready)
            - [Marketing Site](https://vatevo.com/vida)
            - [Dashboard](https://dashboard.vatevo.com)
            `;
            
            // Check if issue already exists
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'uptime-alert'
            });
            
            const existingIssue = issues.data.find(issue => 
              issue.title.includes('Uptime Alert') && 
              issue.created_at > new Date(Date.now() - 30 * 60 * 1000).toISOString() // Last 30 minutes
            );
            
            if (!existingIssue) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: title,
                body: body,
                labels: ['uptime-alert', 'incident']
              });
              console.log('Created new uptime alert issue');
            } else {
              console.log('Uptime alert issue already exists, skipping creation');
            }
      
      - name: Update Status
        run: |
          echo "## Uptime Check Results" >> $GITHUB_STEP_SUMMARY
          echo "| Endpoint | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|----------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| API /healthz | ${{ steps.api_health.outputs.api_healthz }} |" >> $GITHUB_STEP_SUMMARY
          echo "| API /docs | ${{ steps.api_health.outputs.api_docs }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Marketing Site | ${{ steps.web_health.outputs.marketing }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Custom Domain /vida | ${{ steps.web_health.outputs.custom_vida }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Timestamp**: $(date -u)" >> $GITHUB_STEP_SUMMARY
